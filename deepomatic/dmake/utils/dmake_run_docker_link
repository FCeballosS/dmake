#!/bin/bash
#
# Usage:
# dmake_run_docker_link APP_NAME IMAGE_NAME LINK_NAME PROBE_PORTS ARGS...
#
# Result:
# Run a docker link and cache the result (call dmake_return_docker_links to export the docker options)

test "${DMAKE_DEBUG}" = "1" && set -x

if [ $# -lt 4 ]; then
    dmake_fail "$0: Missing arguments"
    exit 1
fi

if [ -z "${DMAKE_TMP_DIR}" ]; then
    dmake_fail "Missing environment variable DMAKE_TMP_DIR"
    exit 1
fi

set -e

APP_NAME=$1; shift
IMAGE_NAME=$1; shift
LINK_NAME=$1; shift
PROBE_PORTS=$1; shift
OPTIONS=( $@ )

CACHE_DIR="${DMAKE_TMP_DIR}/links/${APP_NAME}"
LINK_FILE="${CACHE_DIR}/${LINK_NAME}.link"
NAME_FILE="${CACHE_DIR}/${LINK_NAME}.name"
OPT_FILE="${CACHE_DIR}/${LINK_NAME}.conf"
OPT_STR="${IMAGE_NAME} ${OPTIONS[@]}"

mkdir -p ${CACHE_DIR}

BASE_NAME=${REPO}.${BRANCH}.${BUILD}.${APP_NAME}.${LINK_NAME}

COUNT=0
while [ 1 = 1 ]; do
    CONTAINER_NAME=$BASE_NAME.$COUNT
    if [ `docker ps -a -f name=$CONTAINER_NAME | wc -l | sed "s/ *//"` = "1" ]; then # There is a header line
        break
    fi
    COUNT=$(($COUNT+1))
done

if [ -z "${CONTAINER_ID}" ]; then
    docker pull ${IMAGE_NAME} 2> /dev/null || :
    CONTAINER_ID=$(dmake_run_docker_daemon "" "${CONTAINER_NAME}" ${OPTIONS[@]} ${VOLUMES} -i ${IMAGE_NAME})
    while [ 1 = 1 ]; do
        if [ `docker ps -f id=$CONTAINER_ID -f status=running | wc -l` -gt "0" ]; then
            break
        fi
        if [ `docker ps -a -f id=$CONTAINER_ID -f status=exited | wc -l` -gt "0" ]; then
            echo "Link ${LINK_NAME} exited"
            exit 1
        fi
        if [ `docker ps -a -f id=$CONTAINER_ID -f status=restarting | wc -l` -gt "0" ]; then
            echo "Link ${LINK_NAME} is restarting"
            exit 1
        fi
        sleep 1
    done
fi

LINK_OPT="--link ${CONTAINER_ID}:${LINK_NAME}"
echo ${OPT_STR} > ${OPT_FILE}
echo ${LINK_OPT} > ${LINK_FILE}
echo "${CONTAINER_NAME}" > ${NAME_FILE}

if [ "${PROBE_PORTS}" = "none" ]; then
    :
else
    if [ "${PROBE_PORTS}" = "auto" ]; then
        PROBE_PORTS=$(docker ps -f id=${CONTAINER_ID} --format "{{.Ports}}" | sed "s/ *//g" | sed "s/\([0-9]*\.\)\{3\}[0-9]*:[0-9]*->//g")
    fi
    if [ ! -z "${PROBE_PORTS}" ]; then
        ROOT=$(dirname $0)
        docker run --rm ${LINK_OPT} -v ${ROOT}/dmake_wait_for_it:/usr/bin/dmake_wait_for_it -v ${ROOT}/dmake_wait_for_it_wrapper:/usr/bin/dmake_wait_for_it_wrapper -i ubuntu dmake_wait_for_it_wrapper "${LINK_NAME}" "${PROBE_PORTS}"
    fi
fi
